on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    env:
      ORG: "hinokii"
      IMAGE_NAME: "ling-508-project-milestone"
      TAG: "latest"
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: project
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    - name: Setup Java 9
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '9'
        java-package: jdk
        architecture: x64
    - name: set JDK_9 environment variable for kotlin compiler
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: echo ::set-env name=JDK_9::$(echo $JAVA_HOME)
    - name: Setup Java 11
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '11'
        java-package: jdk
        architecture: x64
    - name: Setup Java 8
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '8'
        java-package: jdk
        architecture: x64
    - name: set JDK 6,7,8 environment variables for kotlin compiler
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: echo ::set-env name=JDK_16::$(echo $JAVA_HOME) && echo ::set-env name=JDK_17::$(echo $JAVA_HOME) && echo ::set-env name=JDK_18::$(echo $JAVA_HOME)
      - name: Build the docker image
        run: |
          docker build . --file Dockerfile --tag ${ORG}/${IMAGE_NAME}:${TAG}
      - name: Run the tests
        run: |
          docker run -i --network ${{ job.services.mysql.network }} ${ORG}/${IMAGE_NAME}:${TAG} python -m pytest tests
